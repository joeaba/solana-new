name : minimal 

on:
  push:
    branches:  [master]
  pull_request:
    branches:  [master]

jobs:
  Export_Github_Repositories:
    runs-on: ubuntu-latest
    env: 
       VERCEL_TOKEN: ${{secrets.VERCEL_TOKEN}}
       GITHUB_TOKEN: ${{secrets.PAT_ANM}} 
       COMMIT_RANGE: ${{ github.event.before}}...${{ github.event.after}}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - run: echo "COMMIT_DIFF_RANGE=$(echo $COMMIT_RANGE)" >> $GITHUB_ENV
#       - run: echo "$COMMIT_DIFF_RANGE"
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          GITHUB_TOKEN: ${{secrets.PAT_ANM}}
        if: ${{ github.event_name == 'push' && 'cron'&& github.ref == 'refs/heads/master'}}
        
      - name: cmd
        run : |
            .travis/export-github-repo.sh web3.js/ solana-web3.js
            
  macos-artifacts:
    needs: [Export_Github_Repositories]
    strategy:
      fail-fast: false
    runs-on: macos-latest
    if : ${{ github.event_name == 'api' && 'cron' || 'push' || startsWith(github.ref, 'refs/tags/v')}}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Setup | Rust
        uses: ATiltedTree/setup-rust@v1
        with:
          rust-version: stable
      - name:  release artifact
        run: |
           source ci/rust-version.sh
           brew install coreutils
           export PATH="/usr/local/opt/coreutils/libexec/gnubin:$PATH"
           greadlink -f .
           source ci/env.sh
           rustup set profile default
           ci/publish-tarball.sh
#       - name: Cache modules
#         uses: actions/cache@master
#         id: yarn-cache
#         with:
#           path: node_modules
#           key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
#           restore-keys: ${{ runner.os }}-yarn-
# #       - name: Config. aws cred
# #         uses: aws-actions/configure-aws-credentials@v1
# #         with:
# #           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
# #           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
# #           aws-region: us-east-2

# #   deploy:
# #     name: Upload to Amazon S3
# # #     needs: [Export_Github_Repositories, macos-artifacts]
# #     strategy:
# #       fail-fast: false
# #       matrix:
# #           os : [macos-latest, windows-latest, ubuntu-latest]
# #     runs-on: ${{ matrix.os }}
# #     steps:
# #       - name: Checkout
# #         uses: actions/checkout@v2.3.4
# #         with:
# #           ref: ${{ github.event.pull_request.head.sha }}
# #       - name: checking out repo
# #         uses: actions/checkout@master
# #       - run: |
# #           pwd
# #           ls
# #           pwd
      - uses: ochanje210/simple-s3-upload-action@master
        with:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY}}
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
          SOURCE_DIR: 'travis-s3-upload1'
          DEST_DIR: 'giitsol'

#   deploy1:
      #uploading to aws is working here
#     name: Upload to Amazon_S3
#     # needs: [Export_Github_Repositories, macos-artifacts, deploy]
#     strategy:
#       fail-fast: false
#       matrix:
#           os : [macos-latest, windows-latest, ubuntu-latest]
#     runs-on: ${{ matrix.os }}
#     steps:
#       - name: finding the path
#         run: |
#           pwd
#           ls
#           pwd
#           ls ../
#           pwd 
#           ls
#       - name: Checkout
#         uses: actions/checkout@v2.3.4
#         with:
#           ref: ${{ github.event.pull_request.head.sha }}
#       - run: |
#           pwd
#           ls
#           pwd
#       - uses: ochanje210/simple-s3-upload-action@master
#         with:
#           AWS_ACCESS_KEY_ID: ${{ secrets.AWS_KEY_ID }}
#           AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY}}
#           AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
#           SOURCE_DIR: './docs/'
#           DEST_DIR: 'giitsol'



# #           aws-region: 'us-east-2'   # optional: defaults to us-east-1
  
  windows-artifact:
    needs: [Export_Github_Repositories]
    strategy:
      fail-fast: false 
    runs-on: windows-latest
    if : ${{ github.event_name == 'api' && 'cron' || 'push' || startsWith(github.ref, 'refs/tags/v')}}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Setup | Rust
        uses: ATiltedTree/setup-rust@v1
        with:
          rust-version: stable
  release-artifact:
    needs: windows-artifact
    runs-on: windows-latest
    if : ${{ github.event_name == 'api' && 'cron' || github.ref == 'refs/heads/master'}}
    steps:
      - name: release artifact 
        run: |
           choco install openssl 
           vcpkg integrate install
           refreshenv
           echo "setting"
           set OPENSSL_CONF="C:\Program Files\OpenSSL-Win64\bin\openssl.cfg"
           echo %OPENSSL_CONF%
           set OPENSSL_CONF=C:\Program Files\OpenSSL-Win64\bin\openssl.cfg
           echo "setting path to C:\Program Files\OpenSSL-Win64"
           openssl version
           $env:PATH += ";C:\Program Files\OpenSSL-Win64;/usr/local/opt/coreutils/libexec/gnubin;/Users/runner/work/solana/solana/solana-release/bin"
           $env:PATH
           $env:OPENSSL_DIR += ";C:\Program Files\OpenSSL-Win64\bin"
#           echo "setting"
#           set OPENSSL_CONF="C:\Program Files\OpenSSL-Win64\bin\openssl.cfg"
#           echo %OPENSSL_CONF%
#           set OPENSSL_CONF=C:\Program Files\OpenSSL-Win64\bin\openssl.cfg
#           echo "setting path to C:\Program Files\OpenSSL-Win64"

           
#      #      if (-not (Test-Path $profile) ) { New-Item -Path $profile -ItemType File -Force}
#      #      '$env:path = "$env:path;C:\Program Files\OpenSSL\bin"' | Out-File $profile -Append
#      #      '$env:OPENSSL_CONF = "C:\certs\openssl.cnf"' | Out-File $profile -Append

      - name: Checkout repository
        uses: actions/checkout@v2
      - name: extending the release artifact 
        run: |
           dir
           echo "1"
           pwd
           echo "3"
           bash ci/rust-version.sh
           readlink -f .
           bash ci/env.sh
           rustup set profile default
           bash ci/publish-tarball.sh
        shell: bash
#            sh ci/rust-version.sh
#            echo "5"
#            readlink -f .
#            ./ci/env.sh
#            rustup set profile default
#            sh ci/publish-tarball.sh
# #         shell: bash
# #       - name: checking out repo
# #         uses: actions/checkout@v2
      - name: Cache modules
        uses: actions/cache@v1
        id: yarn-cache
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-yarn-
      - name: Config. aws cred
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
      - name: Deploy
        uses: shallwefootball/s3-upload-action@master
        with:
            folder: build
            aws_bucket: ${{ secrets.AWS_S3_BUCKET }}
            aws_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            destination_dir: /
            bucket-region: us-east-2
            delete-removed: true
            no-cache: true
            private: true
  Docs:
    needs: [windows-artifact,release-artifact]
    runs-on: ubuntu-latest
    env: 
       GITHUB_TOKEN: ${{secrets.PAT_NEW}} 
       GITHUB_EVENT_BEFORE: ${{ github.event.before }}
       GITHUB_EVENT_AFTER: ${{ github.event.after }}
       COMMIT_RANGE: ${{ github.event.before}}...${{ github.event.after}}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 2
      - name: docs
        if: ${{github.event_name == 'pull_request' || startsWith(github.ref, 'refs/tags/v')}}
        run: |
             touch .env
             echo "COMMIT_RANGE=($COMMIT_RANGE)" > .env
             source ci/env.sh
             .travis/channel_restriction.sh edge beta || exit 0
             .travis/affects.sh docs/ .travis || exit 0
             cd docs/
             source .travis/before_install.sh
             source .travis/script.sh
      - name: setup-node
        uses: actions/checkout@v2
      - name: setup-node
        uses: actions/setup-node@v2
        with:
          node-version: 'lts/*'
      - name: Cache
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-npm-cache-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-npm-cache-2  
  auto_bump:
     needs: [windows-artifact,release-artifact,Docs]
     runs-on: ubuntu-latest
     steps:
       - name : checkout repo
         uses: actions/checkout@v2
         with:
          fetch-depth: '0'
       - name: Bump version and push tag
         uses: anothrNick/github-tag-action@1.26.0
         env:
           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
           WITH_V: true
           DEFAULT_BUMP: patch

# # name : main

# # on:
# #   push:
# #     branches:  [master]
# #   pull_request:
# #     branches:  [master]

# # jobs:
# #   export_github:
# #     runs-on: ubuntu-latest
# #     env: 
# #        GITHUB_TOKEN: ${{secrets.PAT_ANM}}
# #     steps:
# #       - name: Checkout repository
# #         uses: actions/checkout@v2

# #       - name: Set up Python
# #         uses: actions/setup-python@v2
# #         with:
# #           GITHUB_TOKEN: ${{secrets.PAT_ANM}}

# # #       - name: "Export Github Repositories"
# #         if: ${{ github.event_name == 'push' && 'cron'&& github.ref == 'refs/heads/master'}}
        
# #       - name: cmd
# #         run : |
# #             .travis/export-github-repo.sh web3.js/ solana-web3.js
            
            
# #   macos-artifact:
# #     # needs: export_github
# #     strategy:
# #       fail-fast: false
# #       matrix:
# #           os : [macos-latest] 
# #     runs-on: ${{ matrix.os }}
# #     steps:
# #       - name: Checkout repository
# #         uses: actions/checkout@v2
# #       - name: Setup | Rust
# #         uses: ATiltedTree/setup-rust@v1
# #         with:
# #           rust-version: stable
# #       - name:  release artifact
# #         if : ${{ github.event_name == 'api' || 'cron' || github.ref == 'refs/heads/master'}}
# #         run: |
# #            source ci/rust-version.sh
# #            brew install coreutils
# #            export PATH="/usr/local/opt/coreutils/libexec/gnubin:$PATH"
# #            greadlink -f .
# #            source ci/env.sh
# #            rustup set profile default
# #            echo "1"
# #            ci/publish-tarball.sh
# #       - name: checking out repo
# #         uses: actions/checkout@v2
# #       - name: Cache modules
# #         uses: actions/cache@v1
# #         id: yarn-cache
# #         with:
# #           path: node_modules
# #           key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
# #           restore-keys: ${{ runner.os }}-yarn-
# #       - name: Config. aws cred
# #         #if: ${{github.event_name == 'pull_request' && github.ref == 'refs/heads/master'}}
# #         uses: aws-actions/configure-aws-credentials@v1
# #         with:
# #           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
# #           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
# #           aws-region: us-east-2
# #       - name: docs
# #         if: ${{github.event_name == 'pull_request' || 'push' || startsWith(github.ref, 'refs/tags/v')}}
# #         run: |
# #               source ci/env.sh
# #               source .travis/channel_restriction.sh 'edge' 'beta' || exit 0
# #               source .travis/affects.sh docs/ .travis || exit 0
# #               cd docs/
# #               source .travis/before_install.sh 
# #               source .travis/script.sh
# #       - name: setup-node
# #         uses: actions/checkout@v2
# #       - name: setup-node
# #         uses: actions/setup-node@v2
# #         with:
# #           node-version: 'lts/*'
# #       - name: Cache
# #         uses: actions/cache@v1
# #         with:
# #           path: ~/.npm
# #           key: ${{ runner.OS }}-npm-cache-${{ hashFiles('**/package-lock.json') }}
# #           restore-keys: |
# #             ${{ runner.OS }}-npm-cache-2
# #   windows-artifact:
# #     # needs: export_github
# #     strategy:
# #       fail-fast: false
# #       matrix:
# #           os : [windows-latest] 
# #     runs-on: ${{ matrix.os }}
# #     steps:
# #       - name: Checkout repository
# #         uses: actions/checkout@v2
# #       - name: Setup | Rust
# #         uses: ATiltedTree/setup-rust@v1
# #         with:
# #           rust-version: stable
# #       - name:  release artifact
# #         if : ${{ github.event_name == 'api' && 'cron' || github.ref == 'refs/heads/master'}}
# #         run: |
# #            bash ci/rust-version.sh
# #            set PATH="/usr/local/opt/coreutils/libexec/gnubin:$PATH"
# #            readlink -f .
# #            bash ci/env.sh
# #            rustup set profile default
# #            pwd
# #            ls
# #            bash ci/publish-tarball.sh
# #        #brew install coreutils
# #       - name: checking out repo
# #         uses: actions/checkout@v2
# #       - name: Cache modules
# #         uses: actions/cache@v1
# #         id: yarn-cache
# #         with:
# #           path: node_modules
# #           key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
# #           restore-keys: ${{ runner.os }}-yarn-
# #       - name: Config. aws cred
# #         #if: ${{github.event_name == 'pull_request' && github.ref == 'refs/heads/master'}}
# #         uses: aws-actions/configure-aws-credentials@v1
# #         with:
# #           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
# #           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
# #           aws-region: us-east-2
# #       - name: docs
# #         if: ${{github.event_name == 'pull_request' || 'push' || startsWith(github.ref, 'refs/tags/v')}}
# #         run: |
# #               bash ci/env.sh  
# #               bash .travis/channel_restriction.sh ("edge","beta") || exit0
# #               bash .travis/affects.sh docs/ .travis || exit0
# #               cd docs/
# #               bash .travis/before_install.sh 
# #               bash .travis/script.sh
# #       - name: setup-node
# #         uses: actions/checkout@v2
# #       - name: setup-node
# #         uses: actions/setup-node@v2
# #         with:
# #           node-version: 'lts/*'
# #       - name: Cache
# #         uses: actions/cache@v1
# #         with:
# #           path: ~/.npm
# #           key: ${{ runner.OS }}-npm-cache-${{ hashFiles('**/package-lock.json') }}
# #           restore-keys: |
# #             ${{ runner.OS }}-npm-cache-2  
# #       - name: Deploy
# #         run: aws s3 sync ./explorer s3://giitsol.com
# #       - name: Checkout code
# #         uses: actions/checkout@v2


# # name: Bump version
# # on:
# #   push:
# #     branches:
# #       - master
 

# #   auto_bump:
# #      needs: [windows-artifact,macos-artifact]
# #      runs-on: ubuntu-latest
# #      steps:
# #        - name : checkout repo
# #          uses: actions/checkout@v2
# #          with:
# #           fetch-depth: '0'
# #        - name: Bump version and push tag
# #          uses: anothrNick/github-tag-action@1.26.0
# #          env:
# #            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
# #            WITH_V: true
# #            DEFAULT_BUMP: patch
        
        
# #       - name: Checkout sources
# #         uses: actions/checkout@v2
# #         with:
# #           # fetch-depth 0 will check out all the commits and tags needed for the bumper
# #           fetch-depth: 0
# #       - name: Run bumper
# #         id: bumper
# #         # replace VERSION with current version
# #         uses: tomerfi/version-bumper-action@v1.0.0
# #         with:
# #           label: .dev
# #           changelog: true
# #           preset: conventionalcommits
# #           folder: ./


# #       - name: "Automated Version Bump"
# #         id: version_bump_and_create_tag
# #         run: node action.js
# #       - name: "cat package.json"
# #         run: cat ./package.json
# #       - name: Upload release notes
# #         if: steps.version_bump_and_create_tag.outputs.TAG
# #         uses: Roang-zero1/github-create-release-action@master
# #         with:
# #           created_tag: ${{ steps.version_bump_and_create_tag.outputs.TAG }}
# #           release_title: ${{ steps.version_bump_and_create_tag.outputs.TAG }}
# #           update_existing: true
# #         env:
# #           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


# #        - name: Create Release
# #          id: create_release
# #          uses: actions/create-release@v1
# #          env:
# #            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
# #          with:
# #           tag_name: ${{ github.ref }}
# #           release_name: release.${{ github.ref }}
# #           body: |
# #             Changes in this Release
# #             - First Change
# #             - Second Change
# #           draft: false
# #           prerelease: false
